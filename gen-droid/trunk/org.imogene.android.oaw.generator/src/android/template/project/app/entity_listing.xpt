«IMPORT core»
«EXTENSION android::template::MedooAndroidFieldUtilExt»
«DEFINE generate(String canDelete, String canModify, String projectName) FOR CardEntity»
«FILE "/" + projectName.toLowerCase() + "/app/" + name.toFirstUpper() + "Listing.java"»
package org.imogene.android.«projectName.toLowerCase()-».app;

«IF findGis(this) != null-»
import android.content.Intent;
import org.imogene.android.Constants.Extras;
import org.imogene.android.Constants.Intents;
import org.imogene.android.util.database.GpsTableUtils;
import org.imogene.android.util.FormatHelper;

«ENDIF-»
import android.app.SearchManager;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.view.Menu;
import android.view.MenuItem;
import android.view.SubMenu;
import org.imogene.android.Constants.SortOrder;
import org.imogene.android.app.AbstractEntityListing;
import org.imogene.android.«projectName.toLowerCase()».entities.«name.toFirstUpper()-»;
import org.imogene.android.«projectName.toLowerCase()».roles.«name.toFirstUpper()-»Roles;
import org.imogene.android.«projectName.toLowerCase()».search.«projectName.toFirstUpper()-»SearchSupport;
import org.imogene.android.«projectName.toLowerCase()».R;

public class «name.toFirstUpper()-»Listing extends AbstractEntityListing {

	«FOREACH getMainFields(this) AS field ITERATOR i-»
	private static final int MENU_SORT_BY_«field.shortName.toUpperCase()-»_ID = Menu.FIRST + «i.counter1 + 4-»;
	«ENDFOREACH-»
	«FOREACH secondaryFields AS field ITERATOR i-»
	private static final int MENU_SORT_BY_«field.shortName.toUpperCase()-»_ID = Menu.FIRST + «i.counter1 + getMainFields(this).size + 4-»;
	«ENDFOREACH-»
	«IF findGis(this) != null-»
	private static final int MENU_SHOW_CLOUD_ID = Menu.FIRST + «secondaryFields.size + getMainFields(this).size + 5»;
	
	private static final int ACTIVITY_GET_AREA = 1000;
	«ENDIF-»
	
	public «name.toFirstUpper()-»Listing() {
		super(
			«name.toFirstUpper()-».CONTENT_URI,
			«name.toFirstUpper()-».COLOR,
			R.string.«shortName.toLowerCase()-»_des_new,
			R.string.«shortName.toLowerCase()-»_noEntitiesHelpText,
			R.string.«shortName.toLowerCase()-»_des_search
			);
	}
	
	@Override
	protected final void initWhereForSearch() {
		String query = getIntent().getStringExtra(SearchManager.QUERY);
		mSQLBuilder = «projectName.toFirstUpper()-»SearchSupport.searchFor«name.toFirstUpper()-»(query);
	}

	@Override
	protected final void init() {
		SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
		mCanDelete = prefs.getBoolean(getString(R.string.«shortName.toLowerCase()-»_delete), «canDelete»);
		mCanModify = prefs.getBoolean(getString(R.string.«shortName.toLowerCase()-»_modify), «canModify»);
		
		«IF creators.size > 0-»
		mCanWrite = «name.toFirstUpper()-»Roles.canCreate(this);
		«ELSE-»
		mCanWrite = «name.toFirstUpper()-»Roles.canWrite(this);
		«ENDIF-»
	}

	@Override
	protected final void addMapMenu(Menu menu) {
		«IF findGis(this) != null-»
		menu.add(
			Menu.NONE,
			MENU_SHOW_CLOUD_ID,
			Menu.NONE,
			R.string.menu_map)
			.setIcon(android.R.drawable.ic_menu_mapmode);
		«ENDIF-»
	}

	@Override
	protected final void addSortMenuItems(int groupId, SubMenu subMenu) {
		«EXPAND addSortMenu FOREACH getMainFields(this)»
		«EXPAND addSortMenu FOREACH secondaryFields»
	}
	
	@Override
	public boolean onPrepareOptionsMenu(Menu menu) {
		«EXPAND onPrepareMenu FOREACH getMainFields(this)»
		«EXPAND onPrepareMenu FOREACH secondaryFields»
		return super.onPrepareOptionsMenu(menu);
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		«LET findGis(this) AS geoField-»
		«IF geoField != null-»
		case MENU_SHOW_CLOUD_ID:
			startActivityForResult(new Intent(Intents.ACTION_GET_AREA), ACTIVITY_GET_AREA);
			return true;
		«ENDIF-»
		«ENDLET-»
		«EXPAND onOptionItemSelected FOREACH getMainFields(this)»
		«EXPAND onOptionItemSelected FOREACH secondaryFields»
		default :
			return super.onOptionsItemSelected(item);
		}
	}
	
	«LET findGis(this) AS geoField-»
	«IF geoField != null-»
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (resultCode == RESULT_OK && requestCode == ACTIVITY_GET_AREA) {
			Intent intent = GpsTableUtils.build(
				this,
				«name.toFirstUpper()».CONTENT_URI,
				mSQLBuilder,
				"«geoField.name.toLowerCase()»",
				"get«geoField.name.toFirstUpper()»",
				FormatHelper.getLocationFromIntent(data),
				data.getIntExtra(Extras.EXTRA_RADIUS, 0));
			if (intent != null)
				startActivity(intent);
		} else {
			super.onActivityResult(requestCode, resultCode, data);
		}
	}
	«ENDIF-»
	«ENDLET-»

}
«ENDFILE-»
«ENDDEFINE»


«DEFINE addSortMenu FOR FieldEntity-»
subMenu.add(groupId, MENU_SORT_BY_«shortName.toUpperCase()-»_ID, Menu.NONE, R.string.«shortName.toLowerCase()-»);
«ENDDEFINE»


«DEFINE onPrepareMenu FOR FieldEntity-»
if ("«name.toLowerCase()-»".equals(mSortKey))
	menu.findItem(MENU_SORT_BY_«shortName.toUpperCase()-»_ID).setChecked(true);
«ENDDEFINE»

«DEFINE onOptionItemSelected FOR FieldEntity-»
case MENU_SORT_BY_«shortName.toUpperCase()-»_ID:
	if ("«name.toLowerCase()-»".equals(mSortKey)) {
		mSortOrder = mSortOrder != SortOrder.DESCENDANT_ORDER ? SortOrder.DESCENDANT_ORDER : SortOrder.ASCENDANT_ORDER;
	} else {
		mSortKey = "«name.toLowerCase()-»";
		mSortOrder = 0;
	}
	mCursor.requery();
	return true;
«ENDDEFINE»