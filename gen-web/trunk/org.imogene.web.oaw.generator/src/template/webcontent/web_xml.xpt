«IMPORT core»
«DEFINE generate(String projectName, String modelName) FOR Project»
«FILE "web.xml" -»
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>«projectName.toFirstUpper()»</display-name>
  
  
  <!-- root application context / and loader -->
  <context-param>
	<param-name>contextConfigLocation</param-name>		
	<param-value>/WEB-INF/applicationContext.xml /WEB-INF/aopContext.xml</param-value>
  </context-param>	
  <listener>
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- welcome files -->
  <welcome-file-list>
    <welcome-file>«projectName.toFirstUpper()»Index.html</welcome-file>    
  </welcome-file-list>
  
  <!-- authentication servlet -->
  <servlet>
    <servlet-name>authenticationServlet</servlet-name>    
    <servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.«modelName.toFirstUpper()»AuthServlet</servlet-class>      
  </servlet>
  <servlet-mapping>  
    <servlet-name>authenticationServlet</servlet-name>
    <url-pattern>/auth.serv</url-pattern>
  </servlet-mapping>
     
  <!-- filter for hibernate session management  -->
  <filter>
	<filter-name>HibernateSessionFilter</filter-name>
	<filter-class>org.imogene.web.server.util.HibernateSessionFilter</filter-class>
	<init-param>
		<param-name>singleSession</param-name>
		<param-value>true</param-value>
	</init-param>
	<init-param>
		<param-name>sessionFactoryBeanName</param-name>
		<param-value>sessionFactory</param-value>
	</init-param>
  </filter>	  
  <filter-mapping>
	<filter-name>HibernateSessionFilter</filter-name>
	<url-pattern>*.serv</url-pattern>
  </filter-mapping>
  <filter-mapping>
	<filter-name>HibernateSessionFilter</filter-name>
	<url-pattern>*.gupld</url-pattern>
  </filter-mapping>
  <filter-mapping>
	<filter-name>HibernateSessionFilter</filter-name>
	<url-pattern>/getbinary</url-pattern>
  </filter-mapping>
  <filter-mapping>
	<filter-name>HibernateSessionFilter</filter-name>
	<url-pattern>*.sprg</url-pattern>
  </filter-mapping>    
  
  <!-- binary file download -->
  <servlet>
    <servlet-name>downloadServlet</servlet-name>    
    <servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.BinaryDownloadServlet</servlet-class>      
  </servlet>
  <servlet-mapping>  
    <servlet-name>downloadServlet</servlet-name>
    <url-pattern>/getbinary</url-pattern>
  </servlet-mapping>
  
  <!-- upload file maximum size-->
  <context-param>   
    <param-name>maxSize</param-name>
    <param-value>100000000</param-value>
  </context-param>  
  
  <!-- Binary upload servlet -->
  <servlet>
    <servlet-name>uploadServlet</servlet-name>    
    <servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.BinaryUploadServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>uploadServlet</servlet-name>
    <url-pattern>*.gupld</url-pattern>
  </servlet-mapping>
  
  <!-- spring servlet : Used to generate the PDF -->
  <servlet>
	<servlet-name>«projectName.toFirstUpper()»</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	<load-on-startup>2</load-on-startup>
  </servlet>	
  <servlet-mapping>
	<servlet-name>«projectName.toFirstUpper()»</servlet-name>
	<url-pattern>*.sprg</url-pattern>
  </servlet-mapping>    
  
  <!-- Util services -->
  <servlet>
  	<servlet-name>utilServices</servlet-name>
  	<servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.UtilServicesServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>utilServices</servlet-name>
  	<url-pattern>/utilServices.serv</url-pattern>
  </servlet-mapping>
  
  <!-- synchronizables service servlet -->
  <servlet>
    <servlet-name>synchronizableServlet</servlet-name>    
    <servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.SynchronizableServiceServlet</servlet-class>      
  </servlet>
  <servlet-mapping>  
    <servlet-name>synchronizableServlet</servlet-name>
    <url-pattern>/synchronizable.serv</url-pattern>
  </servlet-mapping>
  
  «FOREACH entities AS e -»
  <!-- Servlet that expose a RCP service to handle '«e.name»'-->
  <servlet>
  	<servlet-name>«e.name.toFirstLower()»Service</servlet-name>
  	<servlet-class>org.imogene.«modelName.toLowerCase()».server.servlet.«e.name.toFirstUpper()»ServiceServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>«e.name.toFirstLower()»Service</servlet-name>
  	<url-pattern>/«e.name.toFirstLower()».serv</url-pattern>
  </servlet-mapping>
  
  «ENDFOREACH -»
  
</web-app>
«ENDFILE»
«ENDDEFINE»