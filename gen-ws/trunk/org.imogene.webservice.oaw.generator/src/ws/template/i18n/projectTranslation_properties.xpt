«IMPORT core»
«EXTENSION template::CommonEntityUtilExt»
«EXTENSION template::CommonFieldUtilExt»

«REM» -------To create a property file per defined language---------- «ENDREM»
«DEFINE generate(String projectName) FOR Project»
	«IF this.languages.size == 0 -»
			«FILE "org/imogene/" + projectName.toLowerCase()+"/entity/display/i18n/"+projectName.toFirstUpper()+"Translations.properties"»
				«EXPAND writeProperties(null) FOR this-»
			«ENDFILE»	
	«ELSE-»
		«FOREACH languages AS language ITERATOR iter -»	
			«IF iter.counter0 == 0 -»
				«FILE  "org/imogene/" + projectName.toLowerCase()+"/entity/display/i18n/"+projectName.toFirstUpper()+"Translations.properties"»
					«EXPAND writeProperties(language) FOR this-»
				«ENDFILE»
				«REM» -- Second one used by reports ---- «ENDREM»
				«FILE  "org/imogene/" + projectName.toLowerCase()+"/entity/display/i18n/"+projectName.toFirstUpper()+"Translations_" + language.isoCode + ".properties"»
					«EXPAND writeProperties(language) FOR this-»
				«ENDFILE»				
			«ELSE-»
				«FILE  "org/imogene/" + projectName.toLowerCase()+"/entity/display/i18n/"+projectName.toFirstUpper()+"Translations_" + language.isoCode + ".properties"»
					«EXPAND writeProperties(language) FOR this-»
				«ENDFILE»
			«ENDIF-»
		«ENDFOREACH-»	
	«ENDIF-»
«ENDDEFINE»
«REM» ---------------------------------------------------------------- «ENDREM»


«REM» ---------------------------------------------------------------- «ENDREM»
«DEFINE writeProperties(core::Language currentLanguage) FOR Project-»
/* ------------------------------------------------------------------- */
/*                        FIXED TEXTS                              */
/* ------------------------------------------------------------------- */

/* Enumeration texts */
enumeration_unknown =

/* ------------------------------------------------------------------- */
/*                        GENERATED TEXTS                              */
/* ------------------------------------------------------------------- */

«FOREACH entities AS e»
/* «e.name» fields texts */	
«FOREACH e.mainFields AS field-»
«EXPAND getFieldTexts(currentLanguage.isoCode) FOR field-»
«ENDFOREACH-»
«ENDFOREACH-»	

«ENDDEFINE»
«REM» ---------------------------------------------------------------- «ENDREM»


«REM» ----- get texts for entity fields ----- «ENDREM»
«DEFINE getFieldTexts(String isoCode) FOR FieldEntity-»          
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()» = «getDisplayFromDescription(isoCode,this)»                     
«ENDDEFINE»

«DEFINE getFieldTexts(String isoCode) FOR StringField-»
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()» = «getDisplayFromDescription(isoCode,this)»
«FOREACH this.validationRules AS r ITERATOR i -»
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()»_rule_«i.counter0» = «getDisplayFromDescription(isoCode,r)»
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE getFieldTexts(String isoCode) FOR DatesField-»          
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()» = «getDisplayFromDescription(isoCode,this)» 
	«IF this.min!=null && this.min.length>0 -»
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()»_min = «this.min»
	«ENDIF-»
	«IF this.max!=null && this.max.length>0 -»
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()»_max = «this.max»
	«ENDIF-»		                    
«ENDDEFINE»

«DEFINE getFieldTexts(String isoCode) FOR EnumField-»
«parentGroup.parentCard.name.toFirstLower()»_field_«name.toFirstLower()» = «getDisplayFromDescription(isoCode,this)» 
	«FOREACH enumValues AS enumValue-»		          
«parentGroup.parentCard.name.toFirstLower()»_«name.toFirstLower()»_«enumValue.name.toFirstLower()»_option = «getDisplayFromDescription(isoCode,enumValue)»
	«ENDFOREACH-»
«ENDDEFINE»
«REM» ----------------------------------------- «ENDREM»
