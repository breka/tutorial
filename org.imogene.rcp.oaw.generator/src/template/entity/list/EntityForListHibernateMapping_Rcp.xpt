«IMPORT core»
«EXTENSION template::CommonFieldUtilExt»


«DEFINE generate(String moduleName) FOR CardEntity»
«IF this.topLevel == true -»
		«IF columnFields.isEmpty -»
			«EXPAND getFile(moduleName, this.mainFields.addAll(this.secondaryFields)) FOR this-»		
		«ELSE -»
			«EXPAND getFile(moduleName, this.columnFields) FOR this-»
		«ENDIF- »	
«ENDIF -»
«ENDDEFINE»


«REM» --------------------------------------------------------------------------- «ENDREM»
«REM» ---------------------- GET FILE CONTENT ----------------------------------- «ENDREM»
«REM» ---------------------------------------------------------------------------- «ENDREM»

«DEFINE getFile(String moduleName, Collection[FieldEntity] fieldList) FOR CardEntity»
«FILE name + "ForList.hbm.xml"-»
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class lazy="false" table="«name»" name="org.imogene.«moduleName.toLowerCase()».entity.list.«name.toFirstUpper()»ForList">
		<id name="id" column="«name»_ID"/>			
		«EXPAND fieldMapping(moduleName.toLowerCase()) FOREACH fieldList-»
		<property column="«name»_Creator" name="createdBy"/>
		<property column="«name»_CreationDate" name="created" type="timestamp"/>
		<property column="«name»_Modifier" name="modifiedBy"/>
		<property column="«name»_ModifiedFrom" name="modifiedFrom"/>
		<property column="«name»_LastModificationDate" name="modified" type="timestamp"/>
		<property column="«name»_UploadDate" name="uploadDate" type="timestamp"/>						
    </class>		
</hibernate-mapping>
«ENDFILE»
«ENDDEFINE»




«DEFINE fieldMapping(String packageName) FOR FieldEntity-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»"/>
«ENDDEFINE»

«DEFINE fieldMapping(String packageName) FOR DatesField-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»" type="timestamp"/>
«ENDDEFINE»
«REM»
«DEFINE fieldMapping(String packageName) FOR BinaryField-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»" type="binary" length="518576"/>
«ENDDEFINE»
«ENDREM»

«REM»
	Mapping for MainRelationEntity
	WARNING, table name should always be deducted 
	from the property name, and NOT from the name
	of the type of the entity handled.
«ENDREM»
«DEFINE fieldMapping(String packageName) FOR MainRelationFieldEntity-»
	«IF (this.cardinality == 1)-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation 1 <-> 1 «ENDREM»
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 
					 unique="true" 
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this»_ID"  
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF-»
					 lazy="false"/>
		«ELSE-»
		«REM» Relation 1 <-> N «ENDREM»		
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 					  
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this»«parentGroup.parentCard.name.toFirstUpper()»_ID"    
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF-»
					 lazy="false"/>
		«ENDIF-»
	«ELSE-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation N <-> 1 «ENDREM»	
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" 
			 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
			 cascade="all-delete-orphan" «ENDIF»
			 lazy="true">
			    <key column="«EXPAND template::CommonFieldUtil::propertyName FOR this-»«parentGroup.parentCard.name.toFirstUpper()»_ID"/>
			     «IF this.entity.topLevel==true-»
			    <one-to-many class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»ForList"/>
			    «ELSE-»
			    <one-to-many class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"/>
			    «ENDIF-»
		</set>
		«ELSE-»
		«REM» Relation N <-> N «ENDREM»
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" table ="«EXPAND template::CommonFieldUtil::propertyName FOR this-»«this.parentGroup.parentCard.name.toFirstUpper()»«this.entity.name.toFirstUpper()»" lazy="true">		    	
		    	<key column="«parentGroup.parentCard.name.toFirstUpper()»_ID"/>
		    	«IF this.entity.topLevel==true-»		    		    	
			    <many-to-many column="«this.entity.name.toFirstUpper()»_ID" class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»ForList"/>
			    «ELSE-»
			    <many-to-many column="«this.entity.name.toFirstUpper()»_ID" class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"/>
			    «ENDIF-»			 	    
		</set>
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	Mapping for ReverseRelationEntity
	WARNING, table name should always be deducted 
	from the property name, and NOT from the name
	of the type of the entity handled.
«ENDREM»
«DEFINE fieldMapping(String packageName) FOR ReverseRelationFieldEntity-»
	«IF (this.cardinality == 1)-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM»Relation 1 <-> 1 «ENDREM»
			 «IF (getOppositeRelationType(this) == (core::RelationType::Association).toString())-»
		<one-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»"
					«IF this.entity.topLevel==true-»
				    class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»For«this.oppositeRelationField.name.toFirstUpper()»List"
				    «ELSE-»	
				    class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"
				    «ENDIF-»
				    cascade="merge" 
				    property-ref="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»"/>	
			«ELSE-»	    
		<one-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»"
					«IF this.entity.topLevel==true-»
				    class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»For«this.oppositeRelationField.name.toFirstUpper()»List" 
				    «ELSE-»	
				    class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"
				    «ENDIF-»			    
				    property-ref="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»"/>			    
			«ENDIF-»		
		«ELSE-»
		«REM» Relation 1 <-> N «ENDREM»		
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 					  
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»«oppositeRelationField.parentGroup.parentCard.name.toFirstUpper()»_ID"  
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF-»
					 lazy="false"/>
		«ENDIF-»
	«ELSE-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation N <-> 1 «ENDREM»	
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" 
			 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
			 cascade="all-delete-orphan" «ENDIF»
			 lazy="true">
			    <key column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField-»«oppositeRelationField.parentGroup.parentCard.name.toFirstUpper()»_ID"/>
			    «IF this.entity.topLevel==true-»
			    <one-to-many class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»ForList"/>
			    «ELSE-»	
			    <one-to-many class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"/>
			    «ENDIF-»			    
		</set>
		«ELSE-»
		«REM» Relation N <-> N «ENDREM»
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»"  table="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField-»«EXPAND template::CommonFieldUtil::propertyName FOR this-»" lazy="true">		    	
		    	<key column="«parentGroup.parentCard.name.toFirstUpper()»_ID"/>
		    			    		    	
			    <many-to-many column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»_ID" 
			    			  «IF this.entity.topLevel==true-»
			    			  class="org.imogene.«packageName-».entity.list.«entity.name.toFirstUpper()»ForList"/>
							  «ELSE-»
							  class="org.imogene.«packageName-».entity.«entity.name.toFirstUpper()»"/>
							 «ENDIF-»
		</set>
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»
