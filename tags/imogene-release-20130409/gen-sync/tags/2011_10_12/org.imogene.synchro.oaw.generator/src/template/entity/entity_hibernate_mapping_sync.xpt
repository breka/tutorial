«IMPORT core»
«EXTENSION template::CommonFieldUtilExt»

«DEFINE generate(String packageName, String packagePath, String projectName) FOR CardEntity-»
«FILE packagePath.toLowerCase() + "/entity/" + name + ".hbm.xml"-»
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class lazy="false" table="«name»" name="«packageName.toLowerCase()».entity.«name»">
		<id name="id" column="«name»_ID"/>			
		«EXPAND fieldMapping(packageName) FOREACH this.groups.fields-»
		<property column="«name»_Creator" name="createdBy"/>
		<property column="«name»_CreationDate" name="created" type="timestamp"/>
		<property column="«name»_Modifier" name="modifiedBy"/>
		<property column="«name»_ModifiedFrom" name="modifiedFrom"/>
		<property column="«name»_LastModificationDate" name="modified" type="timestamp"/>
		<property column="«name»_UploadDate" name="uploadDate" type="timestamp"/>
		
		«REM» Specific inheritance for user entities «ENDREM»
		«IF Actor.isAssignableFrom(this.metaType)-»
	    <joined-subclass name="«packageName.toLowerCase()».entity.«name»User" table="«name»Actor" lazy="false">
	        <key column="«name»_ID"/>
		    <property name="login" column="«name»Actor_Login"/>
		    <property name="password" column="«name»Actor_Password"/>
			<set lazy="false" name="roles" table="«name»Roles" >
				<key column="«name»_ID"/>
				<many-to-many class="org.imogene.uao.role.Role" column="Role_ID"/>
			</set>	
			<set lazy="false" name="synchronizables" table="«name»_Synchronizables">
				<key column="«name»_ID"/>
				<many-to-many class="org.imogene.uao.synchronizable.SynchronizableEntity" column="Synchronizable_Id"/>
			</set>		 
			«EXPAND filterField(packageName) FOREACH ((Actor)this).filters-»	   									      	    
	    </joined-subclass>  		
		«ENDIF -»	
						
    </class>		
</hibernate-mapping>
«ENDFILE»
«ENDDEFINE»




«DEFINE fieldMapping(String packageName) FOR FieldEntity-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»"/>
«ENDDEFINE»

«DEFINE fieldMapping(String packageName) FOR TextAreaField-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»" type="text"/>
«ENDDEFINE»

«DEFINE fieldMapping(String packageName) FOR DatesField-»
		<property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»" type="timestamp"/>
«ENDDEFINE»

«DEFINE fieldMapping(String packageName) FOR GeoField-»
	    <property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»Latitude" >
	    	<column name="«parentGroup.parentCard.name»_«name»Latitude" sql-type="numeric(23,20)"/>
		</property>  
	    <property name="«EXPAND template::CommonFieldUtil::propertyName FOR this»Longitude" >
	    	<column name="«parentGroup.parentCard.name»_«name»Longitude" sql-type="numeric(23,20)"/>
		</property>   		
«ENDDEFINE»
«REM»
«DEFINE fieldMapping(String packageName) FOR BinaryField-»
		<property name="«EXPAND template::SyncFieldUtil::propertyName FOR this»" column="«parentGroup.parentCard.name»_«name»" type="binary" length="518576"/>
«ENDDEFINE»
«ENDREM»

«REM»
	Mapping for MainRelationEntity
	WARNING, table name should always be deducted 
	from the property name, and NOT from the name
	of the type of the entity handled.
«ENDREM»
«DEFINE fieldMapping(String packageName) FOR MainRelationFieldEntity-»
	«IF (this.cardinality == 1)-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation 1 <-> 1 «ENDREM»
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 
					 unique="true" 
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this»_ID"  
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF»
					 lazy="false"/>
		«ELSE-»
		«REM» Relation 1 <-> N «ENDREM»		
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 					  
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this»«parentGroup.parentCard.name.toFirstUpper()»_ID"  
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF»
					 lazy="false"/>
		«ENDIF-»
	«ELSE-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation N <-> 1 «ENDREM»	
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" 
			 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
			 cascade="all-delete-orphan" «ENDIF»
			 lazy="true">
			    <key column="«EXPAND template::CommonFieldUtil::propertyName FOR this-»«parentGroup.parentCard.name.toFirstUpper()»_ID"/>
			    <one-to-many class="«packageName.toLowerCase()-».entity.«entity.name»"/>
		</set>
		«ELSE-»
		«REM» Relation N <-> N «ENDREM»
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" table ="«EXPAND template::CommonFieldUtil::propertyName FOR this-»«parentGroup.parentCard.name.toFirstUpper()»«entity.name.toFirstUpper()»" lazy="true">		    	
		    	<key column="«parentGroup.parentCard.name.toFirstUpper()»_ID"/>			    		    	
			    <many-to-many column="«this.entity.name.toFirstUpper()»_ID" class="«packageName.toLowerCase()-».entity.«entity.name»"/>
		</set>
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	Mapping for ReverseRelationEntity
	WARNING, table name should always be deducted 
	from the property name, and NOT from the name
	of the type of the entity handled.
«ENDREM»
«DEFINE fieldMapping(String packageName) FOR ReverseRelationFieldEntity-»
	«IF (this.cardinality == 1)-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM»Relation 1 <-> 1 «ENDREM»
			 «IF (getOppositeRelationType(this) == (core::RelationType::Association).toString())-»
		<one-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»"
				    class="«packageName.toLowerCase()-».entity.«entity.name»" 
				    cascade="merge" 
				    property-ref="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»"/>	
			«ELSE-»	    
		<one-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»"
				    class="«packageName.toLowerCase()-».entity.«entity.name»" 
				    property-ref="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»"/>			    
			«ENDIF-»		
		«ELSE-»
		«REM» Relation 1 <-> N «ENDREM»		
		<many-to-one name="«EXPAND template::CommonFieldUtil::propertyName FOR this»" 					  
					 column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»«oppositeRelationField.parentGroup.parentCard.name.toFirstUpper()»_ID"  
					 not-null="false" 
					 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
					 cascade="all" «ENDIF»
					 lazy="false"/>
		«ENDIF-»
	«ELSE-»
		«IF (getOppositeCardinality(this) == 1)-»
		«REM» Relation N <-> 1 «ENDREM»	
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" 
			 «IF (this.type.toString() == (core::RelationType::Composition).toString())-»
			 cascade="all-delete-orphan" «ENDIF»
			 lazy="true">
			    <key column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField-»«oppositeRelationField.parentGroup.parentCard.name.toFirstUpper()»_ID"/>
			    <one-to-many class="«packageName.toLowerCase()-».entity.«entity.name»"/>
		</set>
		«ELSE-»
		«REM» Relation N <-> N «ENDREM»
		<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»"  table="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField-»«oppositeRelationField.parentGroup.parentCard.name.toFirstUpper()»«parentGroup.parentCard.name.toFirstUpper()-»" lazy="true">		    	
		    	<key column="«parentGroup.parentCard.name.toFirstUpper()»_ID"/>			    		    	
			    «REM»<many-to-many column="«EXPAND template::CommonFieldUtil::propertyName FOR this.oppositeRelationField»_ID" class="«packageName.toLowerCase()-».entity.«entity.name»"/>«ENDREM»
			    <many-to-many column="«entity.name.toFirstUpper()»_ID" class="«packageName.toLowerCase()-».entity.«entity.name»"/>
		</set>
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» Define the relation between the actor an the filter fields values «ENDREM»
«DEFINE filterField(String packageName) FOR FilterField»
			<set name="«EXPAND template::CommonFieldUtil::propertyName FOR this-»" lazy="true">
				<key column="«this.parentActor.name.toFirstUpper()»_ID"/>
				<many-to-many class="«packageName.toLowerCase()».entity.«this.entity.name.toFirstUpper()»" column="«this.name.toFirstLower()»Fields_ID"/>
			</set>
«ENDDEFINE»