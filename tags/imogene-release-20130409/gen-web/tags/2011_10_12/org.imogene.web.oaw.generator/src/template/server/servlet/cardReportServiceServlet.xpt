«IMPORT core»
«DEFINE generate(String projectName) FOR Project»
«FILE projectName.toLowerCase()+"/server/servlet/CardReportServiceController.java"»

package org.imogene.«projectName.toLowerCase()».server.servlet;

import java.util.HashMap;
import java.util.List;
import java.util.ResourceBundle;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.Controller;

import org.imogene.«projectName.toLowerCase()».server.servlet.security.ImogSecurityHandler;
import org.imogene.web.gwt.common.entity.ImogActor;
import org.imogene.web.gwt.common.entity.ImogBean;
import org.imogene.web.gwt.common.entity.ImogRole;
import org.imogene.web.server.ServerConstants;
import org.imogene.web.server.dao.GenericDao;

«FOREACH entities AS e-»
import org.imogene.«projectName.toLowerCase()».client.entity.«e.name.toFirstUpper()»;
«ENDFOREACH-»

/**
 * Controller to generate PDF reports for persisted beans  
 * @author Medes-IMPS 
 */
public class CardReportServiceController implements Controller{
	
	private GenericDao genericDao;
	
	private HttpServletRequest request;
	
	public void setGenericDao(GenericDao genericDao) {
		this.genericDao = genericDao;
	}

	
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
			
		this.request = request;

		/* Get entity id for report */
		String entityId = (String)request.getParameter("entityId");
		String entityShortName = (String) request.getParameter("entityShortName");
		
		/* Get locale for the report */
		String loc = (String) request.getParameter("loc");	
		
		/* return spring model and view */
		return getModelAndView(entityShortName, entityId ,loc);
	}
	
	/**	
	 * Returns spring model and view
	 * @param entityShortName The short name of the entity
	 * @param entityId The id of the entity
	 */
	private ModelAndView getModelAndView(String entityShortName, String entityId, String loc) {
		
		HashMap<String, Object> model = new HashMap<String, Object>();
        JRBeanArrayDataSource dataSource = null;  
        ImogBean[] reportData = new ImogBean[1];
        String reportKey = new String();
        
        ImogActor actor = (ImogActor) request.getSession().getAttribute(ServerConstants.SESSION_USER);
		
		«FOREACH entities AS e-»
		if (entityShortName.equals("«e.shortName»")) {			
			«e.name.toFirstUpper()» entity = («e.name.toFirstUpper()»)genericDao.loadEntity(«e.name.toFirstUpper()».class, entityId);      
			«e.name.toFirstUpper()» securedEntity = («e.name.toFirstUpper()») ImogSecurityHandler.getInstance().getPolicy().toSecure(entity, actor);           
            reportData[0] = securedEntity;
            reportKey = "«e.name»CardReport";

		}
		«ENDFOREACH-»

        dataSource = new JRBeanArrayDataSource(reportData);
        model.put("datasource", dataSource);
        model.put("roles", actor.getRoles());
        
		if (loc!=null && !loc.equals(""))
			model.put(JRParameter.REPORT_RESOURCE_BUNDLE , ResourceBundle.getBundle("org.imogene.«projectName.toLowerCase()».client.i18n.«projectName.toFirstUpper()»Translations_" + loc)); 
              
		return new ModelAndView(reportKey, model);
	}
	
}
«ENDFILE»
«ENDDEFINE»
