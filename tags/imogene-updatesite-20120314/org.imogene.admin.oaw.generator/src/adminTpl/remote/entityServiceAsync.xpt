«IMPORT core»
«DEFINE generate(String packageName, String projectName, boolean gmaps) FOR CardEntity»«REM»«ENDDEFINE» 
«DEFINE generate(String packageName, String projectName, boolean gmaps) FOR Actor»«ENDREM»
«FILE projectName.toLowerCase()+"/client/remote/"+this.name.toFirstUpper() + "ServiceAsync.java"»
package org.imogene.«projectName.toLowerCase()».client.remote;

import java.util.List;

import com.google.gwt.user.client.rpc.AsyncCallback;

import org.imogene.web.gwt.common.criteria.ImogJunction;
import org.imogene.«projectName.toLowerCase()».client.entity.«name.toFirstUpper()»;
«FOREACH groups.fields AS f -»
«EXPAND importsForRelation(projectName) FOR f -»
«ENDFOREACH -»

public interface «name.toFirstUpper()»ServiceAsync {

	/* «name.toFirstLower()» services */
	
	/**
	 * Load the entity with the specified id
	 *@param entityId the entity id
	 *@param callback the result call back
	 */
	public void get«name.toFirstUpper()»(String entityId, AsyncCallback<«name.toFirstUpper()»> callback);	

	/**
	 * List entities of type «name.toFirstUpper()»
	 *@param i first index to retrieve
	 *@param j nb of items to retrieve
	 *@param sortProperty the property used to sort the collection
	 *@param sortOrder true for an ascendant sort
	 *@param callback the result call back
	 */
	public void list«name.toFirstUpper()»(int i, int j, String sortProperty, boolean sortOrder, AsyncCallback<List<«name.toFirstUpper()»>> callback);
	
	/**
	 * List entities of type «name.toFirstUpper()»
	 *@param i first index to retrieve
	 *@param j nb of items to retrieve
	 *@param criterion request criteria
	 *@param sortProperty the property used to sort the collection
	 *@param sortOrder true for an ascendant sort
	 *@param callback the result call back
	 */
	public void list«name.toFirstUpper()»(int i, int j, ImogJunction criterion, String property, boolean sortOrder, AsyncCallback<List<«name.toFirstUpper()»>> callback);
	
	/**
	 * List all the entities of type «name.toFirstUpper()»
	 *@param callback the result call back
	 */
	public void list«name.toFirstUpper()»(AsyncCallback<List<«name.toFirstUpper()»>> callback);
	
	/**
	 *Count number of «name.toFirstLower()» in the database
	 *@param callback the result call back
	 */
	public void count«name.toFirstUpper()»(AsyncCallback<Integer> callback);
	
	/**
	 *Count number of «name.toFirstLower()» in the database, 
	 *that matches the criteria
	 *@param criterion the criteria parameters
	 *@param callback the result call back
	 */
	public void count«name.toFirstUpper()»(ImogJunction criterion, AsyncCallback<Integer> callback);
	
	/**
	 *Save or update the entity
	 *@param entity the entity to save or update
	 *@param isNew true if it is a new entity added for the first time.
	 *@param callback the result call back
	 */
	public void saveOrUpdate(«name.toFirstUpper()» entity, boolean isNew, AsyncCallback<Void> callback);
	
	/**
	 *Save or update the entity without modifing the upload date
	 *@param entity the entity to save or update
	 *@param isNew true if it is a new entity added for the first time.
	 *@param callback the result call back
	 */
	public void saveOrUpdateShadow(«name.toFirstUpper()» entity, boolean isNew, AsyncCallback<Void> callback);
	
	
	/* relation dependences */
	«FOREACH groups.fields AS f -»
		«EXPAND methodsForRelation(name.toFirstUpper()) FOR f -»
	«ENDFOREACH -»
	
	«EXPAND specificPart FOR this -»
	
}
«ENDFILE»
«ENDDEFINE»

«REM»
	Imports implied by the relation fields «ENDREM»
«DEFINE importsForRelation(String projectName) FOR FieldEntity»«ENDDEFINE»
«DEFINE importsForRelation(String projectName) FOR RelationFieldEntity»
«IF cardinality==-1 || cardinality>1 -»
import org.imogene.«projectName.toLowerCase()».client.entity.«entity.name.toFirstUpper()»;
«ENDIF -»
«ENDDEFINE»

«REM»
	DAO methods implied by the relation fields «ENDREM»
«DEFINE methodsForRelation(String parentEntityType) FOR FieldEntity»«ENDDEFINE»
«DEFINE methodsForRelation(String parentEntityType) FOR RelationFieldEntity»
«IF cardinality==-1 || cardinality>1 -»
/**
 * List associated «entity.name.toFirstUpper()», 
 * on the field «name.toFirstLower()»
 *@param parent the parent entity
 *@return the list of the associated entities
 */
public void list«entity.name.toFirstUpper()»(«parentEntityType» parent, AsyncCallback<List<«entity.name.toFirstUpper()»>> callback);
«ENDIF -»
«ENDDEFINE»

«REM»
	Specific part by AOP hook «ENDREM»
«DEFINE specificPart FOR CardEntity»«ENDDEFINE»