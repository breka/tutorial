«IMPORT core»
«DEFINE generate(boolean multilogin) FOR Project»
«FILE "/" + name.toLowerCase() + "/app/" + name.toFirstUpper() + "App.java"»
package org.imogene.android.«name.toLowerCase()-».app;

import java.util.UUID;

import android.app.Application;
import org.imogene.android.preference.PreferenceHelper;
import org.imogene.android.util.app.ApplicationHelper;
import org.imogene.android.util.base64.Base64;
import org.imogene.android.util.encryption.EncryptionManager;
import org.imogene.android.«name.toLowerCase()».R;
import org.imogene.android.«name.toLowerCase()».notification.«name.toFirstUpper()»Notification;

public class «name.toFirstUpper()»App extends Application {

	@Override
	public void onCreate() {
		super.onCreate();
		
		ApplicationHelper.setHomeClass(«name.toFirstUpper()»Listing.class);

		«name.toFirstUpper()»Notification.init();

		if (PreferenceHelper.getHardwareId(this) == null)
        	PreferenceHelper.getSharedPreferences(this)
        	.edit()
        	.putString(getString(R.string.sync_hardware_key), UUID.randomUUID().toString())
        	.commit();
        
        «IF multilogin-»
        if (!PreferenceHelper.isMultilogin(this))
			PreferenceHelper.getSharedPreferences(this)
			.edit()
			.putBoolean(getString(R.string.multilogin), true)
			.commit();
        «ELSE-»
        if (PreferenceHelper.isMultilogin(this))
			PreferenceHelper.getSharedPreferences(this)
			.edit()
			.putBoolean(getString(R.string.multilogin), false)
			.commit();
        «ENDIF-»
        
        if (!PreferenceHelper.isSetAdmin(this)) {
        	EncryptionManager em = EncryptionManager.getInstance(this);
        	String encLogin = new String(Base64.encodeBase64(em.encrypt("admin".getBytes())));
			String encPassword = new String(Base64.encodeBase64(em.encrypt("epipassword".getBytes())));
			String roles = "«FOREACH roles AS r SEPARATOR ';'»«r.name»«ENDFOREACH»";
        	PreferenceHelper.getSharedPreferences(this)
			.edit()
			.putString(getString(R.string.admin_login_key), encLogin)
			.putString(getString(R.string.admin_password_key), encPassword)
			.putString(getString(R.string.admin_roles_key), roles)
			.commit();
        }
	}

}
«ENDFILE»
«ENDDEFINE»
