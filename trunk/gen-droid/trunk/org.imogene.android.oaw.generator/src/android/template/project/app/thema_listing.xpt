«IMPORT core»
«EXTENSION android::template::MedooAndroidFieldUtilExt»
«DEFINE generate(boolean multilogin) FOR Project »
«FILE "/" + name.toLowerCase() + "/app/ThemaListing.java"-»
package org.imogene.android.«name.toLowerCase()-».app;

import java.util.ArrayList;

import android.content.Intent;
import android.net.Uri;
import android.view.Menu;
import org.imogene.android.app.AbstractThemaListing;
«FOREACH entities AS entity-»
«IF entity.topLevel || entity.directAccess.size > 0-»
import org.imogene.android.«name.toLowerCase()-».entities.«entity.name.toFirstUpper()-»;
«ENDIF-»
«IF entity.directAccess.size > 0-»
import org.imogene.android.«name.toLowerCase()-».roles.«entity.name.toFirstUpper()-»Roles;
«ENDIF-»
«ENDFOREACH-»
import org.imogene.android.«name.toLowerCase()».R;
import org.imogene.android.widget.ThemaExpandableListAdapter;
import org.imogene.android.widget.ThemaExpandableListAdapter.EntityChild;

public class ThemaListing extends AbstractThemaListing {

	protected final void fillData() {
		ArrayList<Integer> groupData = new ArrayList<Integer>();
		ArrayList<ArrayList<EntityChild>> childData = new ArrayList<ArrayList<EntityChild>>();
		
		«IF hasMiscellaneousThema(entities, themas)-»
		ArrayList<EntityChild> themaMiscellaneous = new ArrayList<EntityChild>();
		«ENDIF-»
		«FOREACH themas AS thema-»
		ArrayList<EntityChild> thema«thema.name.toFirstUpper()-» = new ArrayList<EntityChild>();
		«ENDFOREACH-»

		«FOREACH entities AS entity-»
		«IF entity.topLevel || entity.directAccess.size > 0-»
			«IF entity.directAccess.size > 0-»
			if («entity.name.toFirstUpper()»Roles.directAccess(this)) {
			«ENDIF-»
			getContentResolver().registerContentObserver(«entity.name.toFirstUpper()-».CONTENT_URI, true, mObserver);
			«IF isInMiscellaneousThema(themas, entity)-»
			themaMiscellaneous.add(new EntityChild(
				«entity.name.toFirstUpper()-».CONTENT_URI,
				«entity.name.toFirstUpper()-».TABLE_NAME,
				R.string.«entity.shortName.toLowerCase()-»_des_pl,
				«IF entity.icon.length > 0-»R.drawable.«entity.icon.split("\\.").get(0).toLowerCase()»«ELSE-»0«ENDIF-»,
				«entity.name.toFirstUpper()-».COLOR));
			«ELSE-»
			«FOREACH themas AS thema-»
				«IF thema.entities.contains(entity)-»
				thema«thema.name.toFirstUpper()-».add(new EntityChild(
					«entity.name.toFirstUpper()-».CONTENT_URI,
					«entity.name.toFirstUpper()-».TABLE_NAME,
					R.string.«entity.shortName.toLowerCase()-»_des_pl,
					«IF entity.icon.length > 0-»R.drawable.«entity.icon.split("\\.").get(0).toLowerCase()»«ELSE-»0«ENDIF-»,
					«entity.name.toFirstUpper()-».COLOR));
				«ENDIF-»
			«ENDFOREACH-»
			«ENDIF-»
			«IF entity.directAccess.size > 0-»
			}
			«ENDIF-»
		«ENDIF-»
		«ENDFOREACH-»
		
		«IF hasMiscellaneousThema(entities, themas)-»
		if (!themaMiscellaneous.isEmpty()) {
			groupData.add(R.string.thema_miscellaneous);
			childData.add(themaMiscellaneous);
		}
		«ENDIF-»
		«FOREACH themas AS thema-»
		if (!thema«thema.name.toFirstUpper()-».isEmpty()) {
			groupData.add(R.string.thema_«thema.name.toLowerCase()-»);
			childData.add(thema«thema.name.toFirstUpper()-»);
		}
		«ENDFOREACH-»

		ThemaExpandableListAdapter adapter = new ThemaExpandableListAdapter(this, groupData, childData);
		setListAdapter(adapter);

    }
    
    @Override
	public boolean onCreateOptionsMenu(Menu menu) {
		boolean result = super.onCreateOptionsMenu(menu);
	    «IF hasQRCode(this)-»
		menu.findItem(R.id.menu_search).setVisible(true);
		«ENDIF-»
		«IF multilogin-»
		menu.findItem(R.id.menu_change_user).setVisible(true).setIntent(new Intent(this, MultiUserListing.class));
		«ENDIF-»
		«IF hasFilter(this)-»
		menu.findItem(R.id.menu_preferences).setIntent(new Intent(this, ExtendedPreferences.class));
		«ENDIF-»
		return result;
	}

}
«ENDFILE-»
«ENDDEFINE»