«IMPORT core»
«DEFINE generate(String projectName) FOR Project-»
«FILE "applicationContext.xml"-»
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>

	<!-- Application properties -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
		    <value>/WEB-INF/application.properties</value>
		</property>
	</bean>	
	
	<!-- Spring-security users details provider -->
	<bean class="org.imogene.«projectName.toLowerCase()».server.security.ImogSecurityDetailService" id="imogSecurityDetailService">
		<property name="genericDao" ref="genericDao"/>
		«FOREACH entities AS e -»
  		  «EXPAND actorDao FOR e -»
		«ENDFOREACH -»
  	</bean>  
	
	<!-- Bean Security Handler -->
	<bean id="securityHandler" class="org.imogene.«projectName.toLowerCase()».server.servlet.security.ImogSecurityHandler" factory-method="getInstance">
		<property name="dao" ref="genericDao" />
		<property name="i18nDao" ref="localizedTextDao" />
	</bean>
	
	<!-- Exported spring properties -->	
	<bean name="exportedProperties" class="org.imogene.web.server.ExportedPropertiesHolder">
		<property name="properties">
			<map>
				<entry key="binaryPath" value="${binary.path}"/>
			</map>
		</property>
	</bean>
	
	<!-- Video converter -->
	<bean name="videoConverter" class="org.imogene.web.server.util.VideoConverter">
		<property name="commandLine" value="${converter.video}"/>
	</bean>
	
	<!--  C3PO data source -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl"     value="${jdbc.url}" />
        <property name="user"        value="${jdbc.username}" />
        <property name="password"    value="${jdbc.password}" />  
	     <!-- C3PO configuration -->
        <property name="acquireIncrement" value="1" />
        <property name="minPoolSize" value="4" />
        <property name="maxPoolSize" value="20" />
        <property name="maxStatements" value="0" />
        <property name="idleConnectionTestPeriod" value="30"/>
    </bean> 
	
	<!-- Session factory -->
	<bean
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		id="sessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				«FOREACH entities AS e -»
				<value>org/imogene/«projectName.toLowerCase()»/server/dao/hibernate/«e.name.toFirstUpper()».hbm.xml</value>	
				«ENDFOREACH -»				
				<value>org/imogene/web/server/binary/file/BinaryFile.hbm.xml</value>
				<value>org/imogene/web/server/dao/hibernate/RoleBeanImpl.hbm.xml</value>
				<value>org/imogene/web/server/dao/hibernate/DefaultActor.hbm.xml</value>
				<value>org/imogene/web/server/dao/hibernate/LocalizedText.hbm.xml</value>
				<value>org/imogene/web/gwt/client/sync/SynchronizableEntity.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>			
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- 
		Transaction manager for the Hibernate session factory
	-->
	<bean
		id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">		
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 
		Entity Hibernate dao 
	-->
	«FOREACH entities AS e -»
	<bean 
		id="«e.name.toFirstLower()»DaoBase"
		class="org.imogene.«projectName.toLowerCase()».server.dao.hibernate.«e.name.toFirstUpper()»DaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	«ENDFOREACH -»
	
	<!-- Binary dao -->	
	<bean class="org.imogene.web.server.dao.hibernate.BinaryFileDaoHibernate" id="binaryDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Localized text dao -->	
	<bean class="org.imogene.web.server.dao.hibernate.LocalizedTextDaoHibernate" id="localizedTextDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>	
	
	<!-- Limited generic dao -->
	<bean class="org.imogene.web.server.dao.hibernate.GenericDaoHibernate" id="genericDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!--
		Configuration that enables to adapt the pojos 
		to be detached to the GWT client side. 
	 -->	
	<bean id="persistenceUtil" class="net.sf.gilead.core.hibernate.HibernateUtil">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="proxyStore" class="net.sf.gilead.core.store.stateful.HttpSessionProxyStore">
		<property name="persistenceUtil" ref="persistenceUtil" />
	</bean>

	<bean id="beanManager" class="net.sf.gilead.core.PersistentBeanManager">
		<property name="proxyStore" ref="proxyStore" />
		<property name="persistenceUtil" ref="persistenceUtil" />
	</bean>
	
</beans>
«ENDFILE»
«ENDDEFINE»


«REM» Set actor dao «ENDREM»
«DEFINE actorDao FOR CardEntity -»«ENDDEFINE»
«DEFINE actorDao FOR Actor -»
		<property name="«name.toFirstLower()»Dao" ref="«name.toFirstLower()»DaoBase"/>
«ENDDEFINE»